{"version":3,"sources":["components/Header.jsx","components/Tasks.jsx","components/AddTask.jsx","components/SearchForm.jsx","components/AddTaskButton.jsx","components/todolistApi.js","App.js","index.js"],"names":["color_theme","localStorage","getItem","document","body","parentElement","dataset","theme","setItem","Header","href","className","type","name","id","htmlFor","onClick","htmlDataSet","userMode","Task","data","onCheck","onDelete","map","todo","key","defaultChecked","completed","onChange","date","Tasks","length","today","Date","toISOString","substr","AddTask","addNewTask","useState","text","setText","setDate","onSubmit","e","preventDefault","required","placeholder","value","target","SearchForm","searchTodo","typing","setTyping","input","setInput","class_name","AddTaskButton","onAdd","btnCss","showAddForm","transform","style","todolistApi","update","todoList","JSON","stringify","parse","fetch","todolistDB","newTodo","toDateString","App","setTodoList","setShowAddForm","Math","floor","random","filter","toLowerCase","includes","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0db161c4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n\tconst onClick = () => {\r\n\t\t// TOGGLE LIGHT/DARK MODE\r\n\t\tlet htmlDataSet = document.body.parentElement.dataset;\r\n\t\tlet userMode = htmlDataSet.theme;\r\n\t\thtmlDataSet.theme = userMode === 'light' ? 'dark' : 'light';\r\n\t\t// SAVE SELECTED THEME MODE\r\n\t\tlocalStorage.setItem('theme', htmlDataSet.theme);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<h1>\r\n\t\t\t\t<a href=\"/\">Todo List</a>\r\n\t\t\t</h1>\r\n\t\t\t<div className=\"mode_icon\">\r\n\t\t\t\t<input type=\"checkbox\" name=\"\" id=\"mood\" />\r\n\t\t\t\t<label htmlFor=\"mood\" onClick={onClick}>\r\n\t\t\t\t\t<i className=\"fa fa-moon-o\"></i>\r\n\t\t\t\t\t<i className=\"fa fa-sun-o\"></i>\r\n\t\t\t\t\t<div className=\"ball\"></div>\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\n// FECTH AND SET THEME MODE\r\n(function() {\r\n\tlet color_theme = localStorage.getItem('theme');\r\n\tif (color_theme) {\r\n\t\tdocument.body.parentElement.dataset.theme = color_theme;\r\n\t} else {\r\n\t\tlocalStorage.setItem('theme', 'light');\r\n\t}\r\n})();\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Tasks = ({ data, onCheck, onDelete }) => {\r\n\treturn (\r\n\t\t<div className=\"tasks\">\r\n\t\t\t{/* HIDE TASK COMPONENT IF TODOLIST IS EMPTY */}\r\n\t\t\t{data.length > 0 ? (\r\n\t\t\t\t<Task data={data} onCheck={onCheck} onDelete={onDelete} />\r\n\t\t\t) : (\r\n\t\t\t\t<h2 className=\"noTask\">No Task Found</h2>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst Task = ({ data, onCheck, onDelete }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{data.map(todo => (\r\n\t\t\t\t<div className=\"task\" key={todo.id}>\r\n\t\t\t\t\t<span className=\"flex\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\tdefaultChecked={todo.completed}\r\n\t\t\t\t\t\t\tid={todo.id}\r\n\t\t\t\t\t\t\tonChange={() => onCheck(todo.id)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor={todo.id}>{todo.name}</label>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<div className=\"date\">{todo.date}</div>\r\n\t\t\t\t\t<div className=\"delTask\" onClick={() => onDelete(todo.id)}>\r\n\t\t\t\t\t\t&times;\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import React, { useState } from 'react';\r\n\r\nlet today = new Date();\r\n// CHANGE DATE TO ISOString FORMAT\r\ntoday = today.toISOString().substr(0, 10);\r\n\r\nfunction AddTask({ addNewTask }) {\r\n\tconst [text, setText] = useState('');\r\n\tconst [date, setDate] = useState(today);\r\n\r\n\tconst onSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\taddNewTask(text, date);\r\n\t\tsetText('');\r\n\t\tsetDate(today);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form id=\"addTaskForm\" onSubmit={onSubmit}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\trequired\r\n\t\t\t\tplaceholder=\"Enter Task\"\r\n\t\t\t\tvalue={text}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tsetText(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"date\"\r\n\t\t\t\trequired\r\n\t\t\t\tvalue={date}\r\n\t\t\t\tonChange={e => {\r\n\t\t\t\t\tsetDate(e.target.value);\r\n\t\t\t\t}}\r\n\t\t\t\tid=\"date\"\r\n\t\t\t/>\r\n\t\t\t<button type=\"submit\">Save Task</button>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default AddTask;\r\n","import React, { useState } from 'react';\r\n\r\nfunction SearchForm({ searchTodo }) {\r\n\tconst [typing, setTyping] = useState();\r\n\tconst [input, setInput] = useState('');\r\n\t// CHANGE INPUT ICON IF TYPING IS TRUE\r\n\tlet class_name = typing ? 'fa fa-times' : 'fa fa-search';\r\n\r\n\tconst clearForm = () => {\r\n\t\t// CLEAR FORM INPUT VALUE\r\n\t\tsetInput('');\r\n\t\tsearchTodo('');\r\n\t\tsetTyping(false);\r\n\t};\r\n\r\n\tconst onChange = e => {\r\n\t\tsetInput(e.target.value);\r\n\t\tsearchTodo(e.target.value);\r\n\t\te.target.value.length > 0 ? setTyping(true) : setTyping(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form id=\"searchForm\" onSubmit={e => e.preventDefault()}>\r\n\t\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Search For Task...\"\r\n\t\t\t\tvalue={input}\r\n\t\t\t\tonChange={onChange}\r\n\t\t\t/>\r\n\t\t\t<i className={class_name} onClick={clearForm}></i>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\n\r\nconst AddTaskButton = ({ onAdd, showAddForm }) => {\r\n\tlet btnCss = showAddForm\r\n\t\t? { transform: 'rotate(0deg)' }\r\n\t\t: { transform: 'rotate(225deg)' };\r\n\treturn (\r\n\t\t<div className=\"addTaskButton\" onClick={onAdd}>\r\n\t\t\t<div className=\"btn\">\r\n\t\t\t\t<span style={btnCss}>&times;</span>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AddTaskButton;\r\n","const todolistApi = {\r\n\t// UPDATE localStorage\r\n\tupdate(todoList) {\r\n\t\tlocalStorage.setItem('todoList', JSON.stringify(todoList));\r\n\t\treturn JSON.parse(localStorage.getItem('todoList'));\r\n\t},\r\n\r\n\t// GET TODOLIST FROM localStorage\r\n\tfetch() {\r\n\t\tlet todolistDB = localStorage.getItem('todoList');\r\n\r\n\t\t// CHECK IF todoList EXIST\r\n\t\tif (todolistDB) {\r\n\t\t\ttodolistDB = JSON.parse(todolistDB);\r\n\t\t} else {\r\n\t\t\t// CREATE NEW TODO IF todoList DOES NOT EXIST\r\n\t\t\tlet today = new Date();\r\n\t\t\tlet newTodo = [\r\n\t\t\t\t{\r\n\t\t\t\t\tid: 0,\r\n\t\t\t\t\tname: 'Add a new task',\r\n\t\t\t\t\tdate: today.toDateString(),\r\n\t\t\t\t\tcompleted: false\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t\t// ADD NEW TODO TO localStorage\r\n\t\t\ttodolistDB = todolistApi.update(newTodo);\r\n\t\t}\r\n\t\treturn todolistDB;\r\n\t}\r\n};\r\n\r\nexport default todolistApi;\r\n","import React, { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\nimport AddTask from './components/AddTask';\r\nimport SearchForm from './components/SearchForm';\r\nimport AddTaskButton from './components/AddTaskButton';\r\nimport todolistApi from './components/todolistApi';\r\n\r\nlet todolistDB = todolistApi.fetch();\r\n\r\n// APP\r\nfunction App() {\r\n\tconst [todoList, setTodoList] = useState(todolistDB);\r\n\tconst [showAddForm, setShowAddForm] = useState(false);\r\n\r\n\tconst onCheck = id => {\r\n\t\ttodolistDB = todoList.map(todo => {\r\n\t\t\treturn todo.id === id ? { ...todo, completed: !todo.completed } : todo;\r\n\t\t});\r\n\r\n\t\ttodolistApi.update(todolistDB);\r\n\t\tsetTodoList(todolistDB);\r\n\t};\r\n\r\n\tconst onDelete = id => {\r\n\t\ttodolistDB = todoList.filter(todo => todo.id !== id);\r\n\r\n\t\ttodolistApi.update(todolistDB);\r\n\t\tsetTodoList(todolistDB);\r\n\t};\r\n\r\n\tconst searchTodo = e => {\r\n\t\tsetTodoList(\r\n\t\t\ttodolistDB.filter(todo =>\r\n\t\t\t\ttodo.name.toLowerCase().includes(e.toLowerCase())\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\r\n\tconst addNewTask = (todo, date) => {\r\n\t\tdate = new Date(date);\r\n\t\ttodolistDB = [\r\n\t\t\t...todolistDB,\r\n\t\t\t{\r\n\t\t\t\t// Generate random ID\r\n\t\t\t\tid: todolistDB.length + Math.floor(Math.random() * 550),\r\n\t\t\t\tname: todo,\r\n\t\t\t\tdate: date.toDateString(),\r\n\t\t\t\tcompleted: false\r\n\t\t\t}\r\n\t\t];\r\n\t\ttodolistApi.update(todolistDB);\r\n\t\tsetTodoList(todolistDB);\r\n\t};\r\n\r\n\tconst toggleAddForm = () => {\r\n\t\tsetShowAddForm(!showAddForm);\r\n\t\t// CLEAR SEARCH\r\n\t\tsetTodoList(todolistDB);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<header>\r\n\t\t\t\t<Header />\r\n\t\t\t\t{showAddForm ? (\r\n\t\t\t\t\t<AddTask addNewTask={addNewTask} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<SearchForm searchTodo={searchTodo} />\r\n\t\t\t\t)}\r\n\t\t\t</header>\r\n\r\n\t\t\t<main>\r\n\t\t\t\t{todoList.length > 0 && <h3 className=\"heading\">Tasks</h3>}\r\n\t\t\t\t<Tasks data={todoList} onCheck={onCheck} onDelete={onDelete} />\r\n\t\t\t</main>\r\n\t\t\t\t<AddTaskButton onAdd={toggleAddForm} showAddForm={showAddForm} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}